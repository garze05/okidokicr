---
import AdminLayout from '../../../layouts/AdminLayout.astro';

export async function getStaticPaths() {
  const res = await fetch('http://localhost:4000/api/services');
  if (!res.ok) throw new Error('Error al cargar los servicios');
  const services = await res.json();
  return services.map(s => ({ params: { id: s.id.toString() } }));
}

const { id } = Astro.params;

// 2. Fetch del servicio
const res = await fetch(`http://localhost:4000/api/services/${id}`);
if (!res.ok) throw new Error(`Servicio ${id} no encontrado`);
const service = await res.json();
---

<AdminLayout
  title={`Editar ${service.name}`}
  description="Panel de control para administrar el sitio web de OkiDoki."
>
  <h1 class="text-2xl font-bold text-secondary-500">Editar {service.name}</h1>
  <p class="text-sm text-gray-500">
    Edita los datos del servicio y guarda los cambios.
  </p>

  <form
    action={`http://localhost:4000/api/services/${id}`}
    method="POST"
    class="mt-5 flex flex-col gap-5"
  >
    <input type="hidden" name="_method" value="PUT" />
    <input type="hidden" name="id" value={service.id} />
    <div class="flex flex-col gap-2">
      <label for="name" class="text-sm font-semibold text-gray-700">
        Nombre
      </label>
      <input
        type="text"
        name="name"
        id="name"
        value={service.title}
        required
        class="rounded-md border border-gray-300 p-2 focus:border-primary-500 focus:outline-none"
      />
    </div>
    <div class="flex flex-col gap-2">
      <label for="description" class="text-sm font-semibold text-gray-700">
        Descripci√≥n
      </label>
      <textarea
        name="description"
        id="description"
        rows="4"
        required
        class="rounded-md border border-gray-300 p-2 focus:border-primary-500 focus:outline-none"
      >
        {service.description}
      </textarea>
    </div>
    </form>
    </AdminLayout>


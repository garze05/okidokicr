---
import CatalogCard from "../components/CatalogCard.astro";
import MainLayout from "../layouts/MainLayout.astro";

// This data would typically come from a database or API
// For now, we'll use static data as an example
const characters = [
  {
    id: 1,
    name: "Princess Ella",
    description: "A magical princess character that brings joy and wonder to children's parties with her elegant costume and storytelling.",
    imageUrl: "/images/princess-ella.jpg",
    totalImages: 5,
    availability: true,
    price: 149.99
  },
  {
    id: 2,
    name: "Space Hero Max",
    description: "An intergalactic hero with a cool space suit that will make any party feel out of this world!",
    imageUrl: "/images/space-max.jpg",
    totalImages: 4,
    availability: true,
    price: 159.99
  },
  {
    id: 3,
    name: "Dino Friend Rex",
    description: "A friendly dinosaur character that teaches kids about prehistoric times through fun games and activities.",
    imageUrl: "/images/dino-rex.jpg",
    totalImages: 6,
    availability: false,
    price: 139.99
  },
  {
    id: 4,
    name: "Magical Unicorn Luna",
    description: "A sparkly unicorn character that brings magic and rainbows to every birthday party.",
    imageUrl: "/images/unicorn-luna.jpg",
    totalImages: 7,
    availability: true,
    price: 169.99
  },
  {
    id: 5,
    name: "Superhero Captain",
    description: "A brave superhero who will inspire children with amazing powers and teach them about courage and helping others.",
    imageUrl: "/images/captain-hero.jpg",
    totalImages: 6,
    availability: true,
    price: 159.99
  },
  {
    id: 6,
    name: "Wizard Merlin",
    description: "A magical wizard who performs incredible magic tricks and tells fascinating stories about magical kingdoms.",
    imageUrl: "/images/wizard-merlin.jpg",
    totalImages: 5,
    availability: false,
    price: 149.99
  },
  {
    id: 7,
    name: "Pirate Adventure",
    description: "An exciting pirate character who takes children on a treasure hunt adventure with maps and golden coins.",
    imageUrl: "/images/pirate-adventure.jpg",
    totalImages: 4,
    availability: true,
    price: 144.99
  },
  {
    id: 8,
    name: "Fairy Sparkle",
    description: "A delightful fairy who spreads joy with her sparkling wings and teaches children about nature and magic.",
    imageUrl: "/images/fairy-sparkle.jpg",
    totalImages: 8,
    availability: true,
    price: 154.99
  }
];
---

<MainLayout title="Catálogo">
  <div class="container mx-auto">
    <section class="px-4 py-10 md:py-12">
      <h1 class="text-5xl md:text-6xl xl:text-8xl from-primary-500 to-secondary-500 font-primary bg-gradient-to-r bg-clip-text font-medium text-transparent">NUESTRO CATÁLOGO</h1>
      <p class="text-lg md:text-xl text-primary-500 mt-2">
        ¡Conoce nuestros personajes y servicios!
      </p>
    </section>

    <!-- Barra de busqueda con icono -->
    <div class="flex items-center justify-center px-4 mb-8">
      <div class="relative w-full max-w-3xl">
        <div class="absolute inset-y-0 left-0 flex items-center pl-3 pointer-events-none">
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
          </svg>
        </div>
        <input
          id="character-search"
          type="text"
          class="w-full pl-10 pr-4 py-3 text-gray-700 text-lg border-2 border-gray-200 focus:border-primary-500 focus:outline-none focus:ring-2 focus:ring-primary-500/30 rounded-lg transition-all duration-300"
          placeholder="Buscar personajes..."
        />
      </div>
    </div>

    <!-- Filtros (opcionales) -->
    <div class="flex flex-wrap items-center gap-2 px-4 mb-6">
      <span class="text-gray-700 font-medium">Filtrar por:</span>
      <button class="px-3 py-1 bg-white text-primary-500 border border-primary-500 rounded-full hover:bg-primary-500 hover:text-white transition-colors duration-300">
        Disponibles
      </button>
      <button class="px-3 py-1 bg-white text-primary-500 border border-primary-500 rounded-full hover:bg-primary-500 hover:text-white transition-colors duration-300">
        Princesas
      </button>
      <button class="px-3 py-1 bg-white text-primary-500 border border-primary-500 rounded-full hover:bg-primary-500 hover:text-white transition-colors duration-300">
        Superhéroes
      </button>
      <button class="px-3 py-1 bg-white text-primary-500 border border-primary-500 rounded-full hover:bg-primary-500 hover:text-white transition-colors duration-300">
        Animales
      </button>
    </div>

    <!-- Personajes -->
    <div class="px-4 pb-12">
      <div id="character-grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
        {characters.map((character) => (
          <div class="character-card h-full">
            <CatalogCard 
              name={character.name}
              description={character.description}
              imageUrl={character.imageUrl}
              totalImages={character.totalImages}
              availability={character.availability}
              price={character.price}
            />
          </div>
        ))}
      </div>
      
      <!-- No Results Message -->
      <div id="no-results" class="hidden text-center py-12">
        <h3 class="text-xl font-medium text-gray-900">No se encontraron personajes</h3>
        <p class="mt-2 text-gray-500">Intenta buscar con otro término</p>
      </div>
    </div>

    <!-- Call to Action Section -->
    <section class="bg-gradient-to-r from-primary-500 to-secondary-500 text-white py-10 px-4 rounded-lg mx-4 mb-12">
      <div class="max-w-3xl mx-auto text-center">
        <h2 class="text-2xl md:text-3xl font-bold mb-4">¿No encuentras lo que buscas?</h2>
        <p class="text-lg mb-6">Podemos personalizar personajes específicos para tu evento. ¡Cuéntanos tu idea!</p>
        <a href="/contacto" class="inline-block px-6 py-3 bg-white text-primary-500 font-bold rounded-lg hover:bg-gray-100 transition-colors duration-300">
          Contáctanos
        </a>
      </div>
    </section>
  </div>
</MainLayout>

<script>
  // Enhanced search functionality
  document.addEventListener('DOMContentLoaded', () => {
    const searchInput = document.getElementById('character-search');
    const characterGrid = document.getElementById('character-grid');
    const characterCards = characterGrid.querySelectorAll('.character-card');
    const noResults = document.getElementById('no-results');
    
    searchInput.addEventListener('input', (e) => {
      const searchTerm = e.target.value.toLowerCase();
      let visibleCount = 0;
      
      characterCards.forEach(cardWrapper => {
        const card = cardWrapper.querySelector('.group') || cardWrapper.firstElementChild;
        const name = card.querySelector('h3')?.textContent.toLowerCase() || '';
        const description = card.querySelector('p')?.textContent.toLowerCase() || '';
        
        if (name.includes(searchTerm) || description.includes(searchTerm)) {
          cardWrapper.classList.remove('hidden');
          visibleCount++;
        } else {
          cardWrapper.classList.add('hidden');
        }
      });
      
      // Show/hide no results message
      if (visibleCount === 0) {
        noResults.classList.remove('hidden');
      } else {
        noResults.classList.add('hidden');
      }
    });

    // Optional: Filter button functionality
    const filterButtons = document.querySelectorAll('.px-3.py-1.bg-white');
    filterButtons.forEach(button => {
      button.addEventListener('click', () => {
        button.classList.toggle('bg-primary-500');
        button.classList.toggle('text-white');
        button.classList.toggle('bg-white');
        button.classList.toggle('text-primary-500');
        
        // Here you would add actual filtering logic based on button selection
        // This is just the UI toggle for now
      });
    });
  });
</script>